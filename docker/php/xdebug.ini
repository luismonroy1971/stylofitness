; Xdebug Configuration for Development
; This configuration enables debugging, profiling, and code coverage

[xdebug]
; Basic settings
zend_extension=xdebug

; Xdebug 3 mode configuration
; Modes: off, develop, coverage, debug, gcstats, profile, trace
xdebug.mode = develop,debug,coverage

; Start debugging automatically
xdebug.start_with_request = yes

; Client settings (IDE connection)
xdebug.client_host = host.docker.internal
xdebug.client_port = 9003
xdebug.idekey = PHPSTORM

; Discovery settings
xdebug.discover_client_host = true

; Logging
xdebug.log = /var/log/xdebug.log
xdebug.log_level = 7

; Step debugging settings
xdebug.max_nesting_level = 512
xdebug.max_stack_frames = -1

; Variable display settings
xdebug.var_display_max_children = 256
xdebug.var_display_max_data = 1024
xdebug.var_display_max_depth = 5

; File link format (for IDEs)
; PhpStorm
xdebug.file_link_format = "phpstorm://open?file=%f&line=%l"
; VS Code
; xdebug.file_link_format = "vscode://file/%f:%l"
; Sublime Text
; xdebug.file_link_format = "subl://open?url=file://%f&line=%l"

; Profiling settings (when mode includes 'profile')
xdebug.output_dir = /tmp/xdebug
xdebug.profiler_output_name = cachegrind.out.%p

; Trace settings (when mode includes 'trace')
xdebug.trace_output_dir = /tmp/xdebug
xdebug.trace_output_name = trace.%c
xdebug.trace_format = 0
xdebug.trace_options = 0

; Coverage settings (when mode includes 'coverage')
xdebug.coverage_enable = 1

; Development helpers
xdebug.cli_color = 1
xdebug.show_error_trace = 1
xdebug.show_exception_trace = 1
xdebug.show_local_vars = 1

; Performance settings
xdebug.use_compression = false

; Cloud debugging (if using cloud IDEs)
; xdebug.cloud_id = your_cloud_id_here

; Force specific IP (uncomment if needed)
; xdebug.client_host = 172.17.0.1

; Connect back settings (legacy, use client_host instead)
; xdebug.remote_connect_back = 0

; Debugging specific functions
; xdebug.start_upon_error = default

; Garbage collection stats (when mode includes 'gcstats')
xdebug.gc_stats_output_dir = /tmp/xdebug
xdebug.gc_stats_output_name = gcstats.%p

; Trigger settings
; You can trigger debugging with GET/POST/COOKIE parameters
; Example: ?XDEBUG_TRIGGER=1 or ?XDEBUG_PROFILE=1
; xdebug.trigger_value = "your_secret_key"

; Step filters (to skip certain functions during debugging)
; xdebug.step_filter = array_*,call_user_func*