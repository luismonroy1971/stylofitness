version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: stylofitness_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php-dev.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - stylofitness
    depends_on:
      - database
      - redis
    environment:
      - APP_ENV=development
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=stylofitness
      - DB_USERNAME=stylofitness
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379

  # Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: stylofitness_webserver
    restart: unless-stopped
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./storage/logs/nginx:/var/log/nginx
    networks:
      - stylofitness
    depends_on:
      - app

  # MySQL Database
  database:
    image: mysql:8.0
    container_name: stylofitness_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: stylofitness
      MYSQL_USER: stylofitness
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - stylofitness
    command: --default-authentication-plugin=mysql_native_password

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stylofitness_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - stylofitness
    command: redis-server /usr/local/etc/redis/redis.conf

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: stylofitness_phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    networks:
      - stylofitness
    depends_on:
      - database

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: stylofitness_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: admin
      HTTP_PASSWORD: admin
    networks:
      - stylofitness
    depends_on:
      - redis

  # Mailhog (Email testing)
  mailhog:
    image: mailhog/mailhog
    container_name: stylofitness_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - stylofitness

  # Node.js for asset compilation
  node:
    image: node:18-alpine
    container_name: stylofitness_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - stylofitness
    command: sh -c "npm install && npm run dev"
    profiles:
      - frontend

  # Elasticsearch (for search functionality)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: stylofitness_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - stylofitness
    profiles:
      - search

  # Kibana (Elasticsearch UI)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: stylofitness_kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - stylofitness
    depends_on:
      - elasticsearch
    profiles:
      - search

  # MinIO (S3-compatible object storage)
  minio:
    image: minio/minio
    container_name: stylofitness_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - stylofitness
    command: server /data --console-address ":9001"
    profiles:
      - storage

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus
    container_name: stylofitness_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - stylofitness
    profiles:
      - monitoring

  # Grafana (Monitoring Dashboard)
  grafana:
    image: grafana/grafana
    container_name: stylofitness_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - stylofitness
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  stylofitness:
    driver: bridge

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
  minio_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local